# EasyPanel Configuration for Hotel OSH System
# Este arquivo serve como referência para configuração dos serviços no EasyPanel

project:
  name: hotel-osh
  description: "Sistema de Gestão de Hotéis OSH - Onscreen Hotels"

services:
  # API Backend Service
  api:
    type: app
    source:
      type: github
      repository: seu-usuario/hotel-osh
      branch: main
      dockerfile: ./api/Dockerfile
    
    environment:
      # Configurações básicas
      NODE_ENV: production
      PORT: 3001
      
      # Database
      DATABASE_URL: "postgresql://$(PROJECT_NAME)_user:$(SERVICE_SECRET)@postgres:5432/$(PROJECT_NAME)_db"
      
      # JWT
      JWT_SECRET: "$(SERVICE_SECRET)"
      JWT_EXPIRES_IN: "24h"
      
      # AWS S3 (opcional)
      AWS_ACCESS_KEY_ID: ""
      AWS_SECRET_ACCESS_KEY: ""
      AWS_REGION: "us-east-1"
      AWS_S3_BUCKET: ""
      
      # WhatsApp Evolution API (opcional)
      EVOLUTION_API_URL: ""
      EVOLUTION_API_KEY: ""
      
      # Flowise AI (opcional)
      FLOWISE_API_URL: ""
      FLOWISE_API_KEY: ""
      
      # Qdrant Vector DB (opcional)
      QDRANT_URL: ""
      QDRANT_API_KEY: ""
    
    domains:
      - name: api.seu-dominio.com
        https: true
    
    proxy_port: 3001
    
    mounts:
      - container_path: /app/uploads
        host_path: /data/hotel-osh/uploads
      - container_path: /app/logs
        host_path: /data/hotel-osh/logs

  # Frontend Hotel App
  hotel-app:
    type: app
    source:
      type: github
      repository: seu-usuario/hotel-osh
      branch: main
      dockerfile: ./hotel-app/Dockerfile
    
    build_args:
      VITE_API_URL: "https://api.seu-dominio.com/api"
      VITE_APP_NAME: "Hotel OSH"
      VITE_APP_VERSION: "1.0.0"
    
    domains:
      - name: app.seu-dominio.com
        https: true
      - name: seu-dominio.com
        https: true
        redirect_to: app.seu-dominio.com
    
    proxy_port: 80

  # PMS Frontend (opcional)
  pms:
    type: app
    source:
      type: github
      repository: seu-usuario/hotel-osh
      branch: main
      dockerfile: ./pms/Dockerfile
    
    build_args:
      VITE_API_URL: "https://api.seu-dominio.com/api"
    
    domains:
      - name: pms.seu-dominio.com
        https: true
    
    proxy_port: 80

  # PostgreSQL Database
  postgres:
    type: postgres
    version: "15"
    environment:
      POSTGRES_DB: "$(PROJECT_NAME)_db"
      POSTGRES_USER: "$(PROJECT_NAME)_user"
      POSTGRES_PASSWORD: "$(SERVICE_SECRET)"
    
    mounts:
      - container_path: /var/lib/postgresql/data
        host_path: /data/hotel-osh/postgres

  # Redis Cache
  redis:
    type: redis
    version: "7-alpine"
    
    mounts:
      - container_path: /data
        host_path: /data/hotel-osh/redis

# Configurações de Deploy
deployment:
  auto_deploy: true
  health_check_timeout: 30
  restart_policy: always
  
# Scripts úteis para o projeto
scripts:
  build_api: "cd api && npm run build"
  build_frontend: "cd hotel-app && npm run build"
  test: "cd api && npm test"
  migrate: "cd api && npm run migrate"

# Notas importantes para o deploy
notes: |
  1. Substitua 'seu-usuario/hotel-osh' pelo seu repositório GitHub real
  2. Substitua 'seu-dominio.com' pelos seus domínios reais
  3. Configure as variáveis de ambiente antes do primeiro deploy
  4. Execute as migrações do banco após o primeiro deploy da API
  5. Certifique-se de que os domínios estão apontando para o servidor EasyPanel